{"version":3,"sources":["logo.svg","components/Component.js","App.js","reportWebVitals.js","index.js"],"names":["Component","props","useState","button","setButton","className","line","like","onClick","styles","background","color","padding","borderRadius","fontFamily","content","id","App","learnReact","RandomArrInd","Math","floor","random","length","randomLink","setLink","src","logo","alt","style","onclick","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,qBCuB1BA,MApBf,SAAmBC,GACjB,MAA4BC,mBAASD,EAAME,QAA3C,mBAAOA,EAAP,KAAeC,EAAf,KAKA,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,MAAb,SAAoBJ,EAAMK,OAC1B,oBAAGD,UAAU,MAAb,oBAA2BJ,EAAMM,QAEjC,wBAAQC,QATO,WACnBJ,EAAU,sBAQyBC,UAAU,WAAzC,SACGF,UCXLM,EAAS,CAEbC,WAAY,aACZC,MAAO,QACPC,QAAS,MACTC,aAAc,MACdC,WAAY,eAGRC,EAAU,CACd,CACEC,GAAI,KACJV,KAAM,mBACNC,KAAM,yBACNJ,OAAQ,aAGV,CAAEa,GAAI,KAAMV,KAAM,YAAaC,KAAM,uBAAcJ,OAAQ,WAC3D,CACEa,GAAI,KACJV,KAAM,cACNC,KAAM,2DACNJ,OAAQ,gBAsEGc,MA3Df,SAAahB,GAGX,IAAMiB,EAAa,CACjB,sBACA,6CACA,2BAEIC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWK,QAC3D,EAA8BrB,mBAASD,EAAMuB,YAA7C,mBAAmBC,GAAnB,WAQA,OACE,sBAAKpB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKqB,IAAKC,EAAMtB,UAAU,WAAWuB,IAAI,SACzC,oBAAIC,MAAO,CAAElB,MAAO,MAAOD,WAAY,UAAvC,0BAGA,mBACEmB,MAAOpB,EACPJ,UAAU,WACVyB,QAhBa,WACnBL,EAAQP,EAAWC,KAgBbY,KAAK,8HACLC,OAAO,SACPC,IAAI,sBANN,6BAcF,iCACE,cAAC,EAAD,CACE3B,KAAMS,EAAQ,GAAGT,KACjBC,KAAMQ,EAAQ,GAAGR,KACjBJ,OAAQY,EAAQ,GAAGZ,SAErB,cAAC,EAAD,CACEG,KAAMS,EAAQ,GAAGT,KACjBC,KAAMQ,EAAQ,GAAGR,KACjBJ,OAAQY,EAAQ,GAAGZ,SAErB,cAAC,EAAD,CACEG,KAAMS,EAAQ,GAAGT,KACjBC,KAAMQ,EAAQ,GAAGR,KACjBJ,OAAQY,EAAQ,GAAGZ,gBC9Ed+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eca87c3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport \"./Component.css\";\r\n\r\nfunction Component(props) {\r\n  const [button, setButton] = useState(props.button);\r\n\r\n  const clickHandler = () => {\r\n    setButton(\"Yes! 👌\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"flex\">\r\n        <p className=\"p-c\">{props.line}</p>\r\n        <p className=\"p-c\">I like {props.like}</p>\r\n\r\n        <button onClick={clickHandler} className=\"myButton\">\r\n          {button}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Component;\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Component from \"./components/Component\";\n\nconst styles = {\n  //background: \"#f5f7b2\",\n  background: \"whitesmoke\",\n  color: \"black\",\n  padding: \"1vw\",\n  borderRadius: \"1vw\", // border-radius: 1vw;\n  fontFamily: \"Inconsolata\",\n};\n\nconst content = [\n  {\n    id: \"c1\",\n    line: \"I'm a component.\",\n    like: \"Ice cream 🍦\",\n    button: \"click me!\",\n  },\n\n  { id: \"c2\", line: \"Me too...\", like: \"kittens 🐈\", button: \"try me!\" },\n  {\n    id: \"c3\",\n    line: \"Me as well!\",\n    like: \"holidys 🏖🌊🏝🌅\",\n    button: \"guess what!\",\n  },\n];\n\n// const clickHandler = () => {\n//   RandomArrInd();\n// };\n\n// props.randomLink = learnReact[RandomArrInd];\n// let randomLink = learnReact[RandomArrInd];\n\nfunction App(props) {\n  // Learn React Link\n\n  const learnReact = [\n    \"https://reactjs.org\",\n    \"https://www.codecademy.com/learn/react-101\",\n    \"https://www.google.com/\",\n  ];\n  const RandomArrInd = Math.floor(Math.random() * learnReact.length);\n  const [randomLink, setLink] = useState(props.randomLink);\n\n  const clickHandler = () => {\n    setLink(learnReact[RandomArrInd]);\n  };\n\n  // Button\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 style={{ color: \"red\", background: \"orange\" }}>Hello React!</h1>\n        {/* <p>Hello {RandomArrInd}</p> */}\n\n        <a\n          style={styles}\n          className=\"App-link\"\n          onclick={clickHandler}\n          href=\"https://www.google.com/search?q=learn+react&oq=learn+react&aqs=chrome.0.69i59j0l4j69i60l3.4603j0j7&sourceid=chrome&ie=UTF-8\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React!\n        </a>\n        {/* <a href=\"#\" class=\"myButton\">\n          white\n        </a> */}\n      </header>\n      <main>\n        <Component\n          line={content[0].line}\n          like={content[0].like}\n          button={content[0].button}\n        />\n        <Component\n          line={content[1].line}\n          like={content[1].like}\n          button={content[1].button}\n        />\n        <Component\n          line={content[2].line}\n          like={content[2].like}\n          button={content[2].button}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}